{"version":3,"sources":["data/overall-statistics.csv","data/hospital-data.csv","App.js","index.js"],"names":["App","useState","chart","setChart","topNavData","setNavData","loading","setLoading","useEffect","data","jkp","jtsd","jk","jpui","jsd","jumlahKesPositif","jumlahRecovered","csv","overall_data","then","result","final","length","jumlahTelahSembuhDiscaj","jumlahKesMati","jumlahKesPUI","forEach","value","month","parseInt","Tarikh","split","console","log","labels","datasets","type","label","backgroundColor","className","options","tooltips","callbacks","title","legend","fontColor","display","text","scales","yAxes","ticks","beginAtZero","xAxes","ReactDOM","render","document","getElementById"],"mappings":"0KAAe,G,MAAA,IAA0B,gD,GCA1B,I,eCgJAA,MAxIf,WAAgB,IAAD,EAEaC,qBAFb,mBAENC,EAFM,KAECC,EAFD,OAGsBF,qBAHtB,mBAGLG,EAHK,KAGOC,EAHP,OAImBJ,oBAAS,GAJ5B,mBAILK,EAJK,KAIIC,EAJJ,KAsFb,OA7EAC,qBAAU,WAER,IAAIC,EAAO,CACTC,IAAM,EAAGC,KAAO,EAAGC,GAAK,EAAGC,KAAO,EAAGC,IAAM,GAGzCC,EAAmB,GAAIC,EAAkB,GAE7CC,YAAIC,GAAcC,MAAK,SAAAC,GACXA,EACV,IAAIC,EAAQD,EAAOA,EAAOE,OAAO,GACjCb,EAAKC,IAAMW,EAAMN,iBACjBN,EAAKE,KAAOU,EAAME,wBAClBd,EAAKG,GAAKS,EAAMG,cAChBf,EAAKI,KAAOQ,EAAMI,aAClBhB,EAAKK,IAAM,EAEXM,EAAOM,SAAQ,SAAAC,GACb,IAAIC,EAAQC,SAASF,EAAMG,OAAOC,MAAM,KAAK,IAAI,EACjDhB,EAAiBa,GAASD,EAAMZ,iBAChCC,EAAgBY,GAASD,EAAMJ,2BAEjCS,QAAQC,IAAIlB,GACZiB,QAAQC,IAAIjB,GACZX,EAAWI,GACXF,GAAW,GACXJ,EAAS,CACP+B,OAAQ,CAAC,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YACvEC,SAAU,CACR,CACEC,KAAK,OACLC,MAAO,qBACP5B,KAAMM,EACNuB,gBAAiB,wBAEnB,CACEF,KAAK,MACLC,MAAO,iCACP5B,KAAMO,EACNsB,gBAAiB,iCAKxB,IAkCD,sBAAKC,UAAU,YAAf,UAEE,sBAAKA,UAAU,oBAAf,gDAEI,qBAAKA,UAAU,aAAf,4CAKJ,sBAAKA,UAAU,UAAf,UACI,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,YAAf,UACIjC,GAAWF,EAAWM,MAF5B,wBAMA,sBAAK6B,UAAU,SAAf,UACE,qBAAKA,UAAU,aAAf,UACIjC,GAAWF,EAAWO,OAF5B,oCAMA,sBAAK4B,UAAU,SAAf,UACE,qBAAKA,UAAU,YAAf,UACIjC,GAAWF,EAAWU,MAF5B,2BAMA,sBAAKyB,UAAU,SAAf,UACE,qBAAKA,UAAU,WAAf,UACIjC,GAAWF,EAAWQ,KAF5B,qBAMA,sBAAK2B,UAAU,SAAf,UACE,qBAAKA,UAAU,aAAf,UACIjC,GAAWF,EAAWS,OAF5B,uBAQJ,qBAAK0B,UAAU,MAAf,SACGrC,EAAQ,cAAC,MAAD,CAAKO,KAAMP,EAAOsC,QAAO,2BA3E1B,CACZC,SAAU,CACPC,UAAW,CACRC,MAAO,eAGbC,OAAQ,CACHV,OAAQ,CACHW,UAAW,UAGrBF,MAAO,CACHG,SAAS,EACTD,UAAW,QACXE,KAAM,sBAEVC,OAAQ,CACJC,MAAO,CAAC,CACJC,MAAO,CACHC,aAAY,EACZN,UAAW,WAGrBO,MAAO,CAAC,CACFF,MAAO,CACHL,UAAW,cAkDe,IAAeF,MAAO,OAAU,0BCrI1EU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.1384dafc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/overall-statistics.f979d527.csv\";","export default __webpack_public_path__ + \"static/media/hospital-data.369a27f7.csv\";","\nimport './App.css';\nimport overall_data from './data/overall-statistics.csv';\nimport hospital_data from './data/hospital-data.csv'; \nimport { csv } from \"d3\";\nimport { useEffect, useState } from 'react';\nimport { Bar, HorizontalBar } from 'react-chartjs-2';\n\nfunction App() {\n\n  const [chart, setChart] = useState()\n  const [ topNavData, setNavData ] = useState()\n  const [ loading, setLoading ] = useState(true)\n\n  var allData\n\n  //get data for all month (jumlah kes positif x jumlah recovered)\n  useEffect(()=>{\n\n    var data = {\n      jkp : 0, jtsd : 0, jk : 0, jpui : 0, jsd : 0\n    }\n\n    var jumlahKesPositif = [], jumlahRecovered = []\n\n    csv(overall_data).then(result=>{\n      allData = result\n      var final = result[result.length-1]\n      data.jkp = final.jumlahKesPositif\n      data.jtsd = final.jumlahTelahSembuhDiscaj\n      data.jk = final.jumlahKesMati\n      data.jpui = final.jumlahKesPUI\n      data.jsd = 0\n\n      result.forEach(value=>{\n        var month = parseInt(value.Tarikh.split('/')[1])-6\n        jumlahKesPositif[month] = value.jumlahKesPositif\n        jumlahRecovered[month] = value.jumlahTelahSembuhDiscaj\n      })\n      console.log(jumlahKesPositif)\n      console.log(jumlahRecovered)\n      setNavData(data)\n      setLoading(false)\n      setChart({\n        labels: ['June', 'July', 'August', 'September', 'October', 'November', 'December'],\n        datasets: [\n          {\n            type:'line',\n            label: 'Jumlah Kes Positif',\n            data: jumlahKesPositif,\n            backgroundColor: 'rgba(240, 84, 84, 1)',\n          },\n          {\n            type:'bar',\n            label: 'Jumlah telah Sembuh dan Discaj',\n            data: jumlahRecovered,\n            backgroundColor: 'rgba(22, 199, 154, 1)',\n          },\n        ]\n      })\n    })\n  }, [])\n\n  var options = {\n    tooltips: {\n       callbacks: {\n          title: function() {}\n       }\n    },\n    legend: {\n         labels: {\n              fontColor: 'white'\n             }\n          },\n    title: {\n        display: true,\n        fontColor: 'white',\n        text: 'Custom Chart Title'\n    }     ,\n    scales: {\n        yAxes: [{\n            ticks: {\n                beginAtZero:true,\n                fontColor: 'white'\n            },\n        }],\n      xAxes: [{\n            ticks: {\n                fontColor: 'white'\n            },\n        }]\n    } \n  }\n\n  return (\n    <div className=\"container\">\n\n      <div className='brand-name cuprum'>\n          Chartjs Data Visualizations Group B\n          <div className=\"brand-date\">\n            (June 2020 - December 2020)\n          </div>\n      </div>\n\n      <div className='top-nav'>\n          <div className=\"button\">\n            <div className='jkp value'>\n              {!loading && topNavData.jkp}\n            </div>\n            Jumlah Kes Positif\n          </div>\n          <div className=\"button\">\n            <div className='jtsd value'>\n              {!loading && topNavData.jtsd}\n            </div>\n            Jumlah telah Sembuh dan Discaj\n          </div>\n          <div className=\"button\">\n            <div className='jsd value'>\n              {!loading && topNavData.jsd}\n            </div>\n            Jumlah Sedang dirawat\n          </div>\n          <div className=\"button\">\n            <div className='jk value'>\n              {!loading && topNavData.jk}\n            </div>\n            Jumlah Kematian\n          </div>\n          <div className=\"button\">\n            <div className='jpui value'>\n              {!loading && topNavData.jpui}\n            </div>\n            Jumlah Kes PUI\n          </div>\n      </div>\n      \n      <div className='bar'>\n        {chart ? <Bar data={chart} options={{...options, title: ''}} /> : 'loading data ....'}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}