{"version":3,"sources":["data/overall-statistics.csv","data/hospital-data.csv","App.js","index.js"],"names":["App","useState","chart","setChart","dailyChart","setDailyChart","topNavData","setNavData","loading","setLoading","loadingData","setLoadingData","overall","setOverall","hospital","setHospital","isDaily","setIsDaily","labelMonth","useEffect","data","jkp","jtsd","jk","jpui","jsd","jumlahKesPositif","jumlahRecovered","Promise","all","csv","overall_data","hospital_data","then","results","final","length","jumlahTelahSembuhDiscaj","jumlahKesMati","jumlahKesPUI","dirawatJumlah","forEach","value","month","parseInt","Tarikh","split","labels","datasets","type","fill","label","backgroundColor","borderColor","pointRadius","pointHoverRadius","console","log","options","onClick","event","elements","_chart","element","getElementAtEvent","xLabel","_index","dataset","_datasetIndex","indexOf","att","shortAtt","conv_shortLabel","days","arrDay","i","push","label_daily","matiJumlah","filter_daily","setDailyView","tooltips","callbacks","title","legend","fontColor","scales","yAxes","ticks","beginAtZero","xAxes","button_clicked","switch_jkp","jtsd_view","dirawat","jsd_view","kesKematian","jk_view","kesPUI","jpui_view","default_view","className","style","display","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.797ed7f7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/overall-statistics.f979d527.csv\";","export default __webpack_public_path__ + \"static/media/hospital-data.cfebbe68.csv\";","\nimport './App.css';\nimport overall_data from './data/overall-statistics.csv';\nimport hospital_data from './data/hospital-data.csv'; \nimport { csv } from \"d3\";\nimport { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nfunction App() {\n\n  const [chart, setChart] = useState()\n  const [ dailyChart, setDailyChart ] = useState()\n  const [ topNavData, setNavData ] = useState()\n  const [ loading, setLoading ] = useState(true)\n  const [ loadingData, setLoadingData ] = useState(true)\n  const [ overall, setOverall ] = useState()\n  const [ hospital, setHospital ] = useState()\n\n  const [ isDaily, setIsDaily ] = useState()\n\n  const labelMonth = [\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December'\n  ]\n\n  //get data for all month (jumlah kes positif x jumlah recovered)\n  useEffect(()=>{\n    var data = {\n      jkp : 0, jtsd : 0, jk : 0, jpui : 0, jsd : 0\n    }\n\n    var jumlahKesPositif = [], jumlahRecovered = []\n    if(loadingData)\n    Promise.all([csv(overall_data), csv(hospital_data)]).then(results=>{\n      var overall = results[0]\n      var hospital = results[1]\n      var final = overall[overall.length-1]\n      data.jkp = final.jumlahKesPositif\n      data.jtsd = final.jumlahTelahSembuhDiscaj\n      data.jk = final.jumlahKesMati\n      data.jpui = final.jumlahKesPUI\n      data.jsd = hospital[hospital.length-1].dirawatJumlah\n\n      overall.forEach(value=>{\n        var month = parseInt(value.Tarikh.split('/')[1])-6\n        jumlahKesPositif[month] = value.jumlahKesPositif\n        jumlahRecovered[month] = value.jumlahTelahSembuhDiscaj\n      })\n      \n      setNavData(data)\n      setOverall(overall)\n      setHospital(hospital)\n      setLoading(false)\n      setLoadingData(false)\n      setChart({\n        labels: labelMonth,\n        datasets: [\n          {\n            type:'line',\n            fill: false,\n            label: 'Total Positive Cases',\n            data: jumlahKesPositif,\n            backgroundColor: 'rgba(240, 84, 84, 1)',\n            borderColor: 'rgba(240, 84, 84, 1)',\n            pointRadius: 5,\n            pointHoverRadius: 7,\n          },\n          {\n            type:'bar',\n            label: 'Total Recovered and Discharge',\n            data: jumlahRecovered,\n            backgroundColor: 'rgba(22, 199, 154, 1)',\n          },\n        ]\n      })\n    })\n  }, [])\n\n  console.log(overall)\n  function conv_shortLabel(label){\n    switch (label) {\n      case 'Total Positive Cases':\n        return 'jkp'\n      break;\n      case 'Total Recovered and Discharge':\n        return 'jtsd'\n      break;\n      case 'Total In Treatment':\n        return 'jsd'\n      break;\n      case 'Total Death':\n        return 'jk'\n      break;\n      case 'Total PUI Cases':\n        return 'jpui'\n      break;\n      default:\n        return 'default'\n      break;\n    }\n  }\n\n  var options = {\n    onClick: (event, elements) => {\n      const chart = elements[0]._chart;\n      const element = chart.getElementAtEvent(event)[0];\n      const xLabel = chart.data.labels[element._index];\n      const dataset = chart.data.datasets[element._datasetIndex];\n\n      const month = labelMonth.indexOf(xLabel)\n\n      if(element._datasetIndex == 0){\n        //positive cases\n        setDailyView(dataset.label, month)\n      }\n      \n      if(element._datasetIndex == 1){//only if default\n        //recovered\n      }\n    },\n    tooltips: {\n       callbacks: {\n          title: function() {}\n       }\n    },\n    legend: {\n      labels: {\n        fontColor: 'white'\n        }\n    },\n    scales: {\n        yAxes: [{\n            ticks: {\n                beginAtZero:true,\n                fontColor: 'white'\n            },\n        }],\n      xAxes: [{\n            ticks: {\n                beginAtZero: true,\n                fontColor: 'white'\n            },\n        }]\n    } \n  }\n\n  var dailyOpt = {\n    tooltips: {\n       callbacks: {\n          title: function() {}\n       }\n    },\n    legend: {\n      labels: {\n        fontColor: 'white'\n        }\n    },\n    scales: {\n        yAxes: [{\n            ticks: {\n                beginAtZero:true,\n                fontColor: 'white'\n            },\n        }],\n      xAxes: [{\n            ticks: {\n                beginAtZero: true,\n                fontColor: 'white'\n            },\n        }]\n    } \n  }\n\n  function filter_daily(shortAtt, month){\n    var data = []\n    switch(shortAtt){\n      case 'jkp':\n        overall.forEach(value=>{\n          var m = parseInt(value.Tarikh.split('/')[1])-6\n          if(m == month){\n            data.push(value.jumlahKesPositif)\n          }\n        })\n      break;\n      case 'jtsd':\n        overall.forEach(value=>{\n          var m = parseInt(value.Tarikh.split('/')[1])-6\n          if(m == month){\n            data.push(value.jumlahTelahSembuhDiscaj)\n          }\n        })\n      break;\n      case 'jsd':\n        hospital.forEach(value=>{\n          var m = parseInt(value.Tarikh.split('/')[1])-6\n          if(m == month){\n            data.push(value.dirawatJumlah)\n          }\n        })\n      break;\n      case 'jk':\n        hospital.forEach(value=>{\n          var m = parseInt(value.Tarikh.split('/')[1])-6\n          if(m == month){\n            data.push(value.matiJumlah)\n          }\n        })\n      break;\n      case 'jpui':\n        overall.forEach(value=>{\n          var m = parseInt(value.Tarikh.split('/')[1])-6\n          if(m == month){\n            data.push(value.jumlahKesPUI)\n          }\n        })\n      break;\n    }\n    return data\n  }\n\n  function label_daily(month){\n    var days = 0\n    var arrDay = []\n    switch (month) {\n      case 0: days=30; break;\n      case 1: days=31; break;\n      case 2: days=31; break;\n      case 3: days=30; break;\n      case 4: days=31; break;\n      case 5: days=30; break;\n      case 6: days=31; break;\n    }\n\n    for(var i = 1; i < days+1; i ++){\n      arrDay.push(i)\n    }\n    return arrDay\n  }\n\n  function setDailyView(att, month){\n    const shortAtt = conv_shortLabel(att)\n    const days = label_daily(month)\n    const data = filter_daily(shortAtt, month)\n    setIsDaily(true)\n    setChart()\n    setDailyChart({\n      labels: days,\n      datasets: [\n        {\n          type:'bar',\n          fill: false,\n          label: att,\n          data: data,\n          backgroundColor: 'rgba(240, 84, 84, 1)',\n        },\n      ]\n    })\n  }\n\n  function switch_jkp(){\n    var jumlahKesPositif = []\n    overall.forEach(value=>{\n      var month = parseInt(value.Tarikh.split('/')[1])-6\n      jumlahKesPositif[month] = value.jumlahKesPositif\n    })\n    \n    setChart({\n      labels: labelMonth,\n      datasets: [\n        {\n          type:'bar',\n          fill: false,\n          label: 'Total Positive Cases',\n          data: jumlahKesPositif,\n          backgroundColor: 'rgba(240, 84, 84, 1)',\n          pointRadius: 5,\n          pointHoverRadius: 7,\n        },\n      ]\n    })\n  }\n\n  function jtsd_view(){\n    var jumlahRecovered = []\n    overall.forEach(value=>{\n      var month = parseInt(value.Tarikh.split('/')[1])-6\n      jumlahRecovered[month] = value.jumlahTelahSembuhDiscaj\n    })\n    \n    setChart({\n      labels: labelMonth,\n      datasets: [\n        {\n          type:'bar',\n          label: 'Total Recovered and Discharge',\n          data: jumlahRecovered,\n          backgroundColor: 'rgba(22, 199, 154, 1)',\n        },\n      ]\n    })\n  }\n\n  function jsd_view(){\n    var dirawat = []\n    hospital.forEach(value=>{\n      var month = parseInt(value.Tarikh.split('/')[1])-6\n      dirawat[month] = value.dirawatJumlah\n    })\n    \n    setChart({\n      labels: labelMonth,\n      datasets: [\n        {\n          type:'bar',\n          label: 'Total In Treatment',\n          data: dirawat,\n          backgroundColor: 'rgba(255, 211, 105, 1)',\n        },\n      ]\n    })\n  }\n\n  function jk_view(){\n    var kesKematian = []\n    hospital.forEach(value=>{\n      var month = parseInt(value.Tarikh.split('/')[1])-6\n      kesKematian[month] = value.matiJumlah\n    })\n    \n    setChart({\n      labels: labelMonth,\n      datasets: [\n        {\n          type:'bar',\n          label: 'Total Death',\n          data: kesKematian,\n          backgroundColor: 'rgba(240, 84, 84, 1)',\n        },\n      ]\n    })\n  }\n\n  function jpui_view(){\n    var kesPUI = []\n    overall.forEach(value=>{\n      var month = parseInt(value.Tarikh.split('/')[1])-6\n      kesPUI[month] = value.jumlahKesPUI\n    })\n    \n    setChart({\n      labels: labelMonth,\n      datasets: [\n        {\n          type:'bar',\n          label: 'Total PUI Cases',\n          data: kesPUI,\n          backgroundColor: 'rgba(240, 84, 84, 1)',\n        },\n      ]\n    })\n  }\n\n  function default_view(){\n    setIsDaily(false)\n    setDailyChart()\n    var jumlahKesPositif = [], jumlahRecovered = []\n    overall.forEach(value=>{\n      var month = parseInt(value.Tarikh.split('/')[1])-6\n      jumlahKesPositif[month] = value.jumlahKesPositif\n      jumlahRecovered[month] = value.jumlahTelahSembuhDiscaj\n    })\n    \n    setChart({\n      labels: labelMonth,\n      datasets: [\n        {\n          type:'line',\n          fill: false,\n          label: 'Total Positive Cases',\n          data: jumlahKesPositif,\n          backgroundColor: 'rgba(240, 84, 84, 1)',\n          borderColor: 'rgba(240, 84, 84, 1)',\n          pointRadius: 5,\n          pointHoverRadius: 7,\n        },\n        {\n          type:'bar',\n          label: 'Total Recovered and Discharge',\n          data: jumlahRecovered,\n          backgroundColor: 'rgba(22, 199, 154, 1)',\n        },\n      ]\n    })\n  }\n\n  function button_clicked(att){\n    setIsDaily(false)\n    setDailyChart()\n    switch(att){\n      case 'jkp':\n        switch_jkp()\n      break;\n      case 'jtsd':\n        jtsd_view()\n      break;\n      case 'jsd':\n        jsd_view()\n      break;\n      case 'jk':\n        jk_view()\n      break;\n      case 'jpui':\n        jpui_view()\n      break;\n      default:\n        default_view();\n      break;\n    }\n  }\n\n  return (\n    <div className=\"container\">\n\n      <div className='brand-name cuprum' onClick={()=>button_clicked()}>\n          Chartjs Data Visualizations Group B\n          <div className=\"brand-date\">\n            (June 2020 - December 2020)\n          </div>\n      </div>\n\n      <div className='top-nav'>\n          <div className=\"button\" onClick={()=>button_clicked('jkp')}>\n            <div className='jkp value'>\n              {!loading && topNavData.jkp}\n            </div>\n            Positive Cases\n          </div>\n          <div className=\"button\" onClick={()=>button_clicked('jtsd')}>\n            <div className='jtsd value'>\n              {!loading && topNavData.jtsd}\n            </div>\n            Recovered and Discharged\n          </div>\n          <div className=\"button\" onClick={()=>button_clicked('jsd')}>\n            <div className='jsd value'>\n              {!loading && topNavData.jsd}\n            </div>\n            In Treatment\n          </div>\n          <div className=\"button\" onClick={()=>button_clicked('jk')}>\n            <div className='jk value'>\n              {!loading && topNavData.jk}\n            </div>\n            Death\n          </div>\n          <div className=\"button\" onClick={()=>button_clicked('jpui')}>\n            <div className='jpui value'>\n              {!loading && topNavData.jpui}\n            </div>\n            PUI Cases\n          </div>\n      </div>\n      \n      <div className='bar' style={{display: !isDaily ? 'block' : 'none'}}>\n        {chart ? <Line data={chart} options={{...options, title: ''}} /> : 'loading monthly data ....'}\n      </div>\n\n      <div className='bar' style={{display: isDaily ? 'block' : 'none'}}>\n        {dailyChart ? <Line data={dailyChart} options={{...dailyOpt, title: ''}} /> : 'loading daily data ....'}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}