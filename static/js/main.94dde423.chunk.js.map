{"version":3,"sources":["data/overall-statistics.csv","data/hospital-data.csv","PositiveCases.jsx","PUI.jsx","ShowDeath.jsx","ShowPending.jsx","ShowAC.jsx","ShowTC.jsx","App.js","index.js"],"names":["PositiveCases","overall","hospital","labelMonth","label_daily","useState","isDaily","setDaily","dailyChart","setDailyChart","monthlyChart","setMonthlyChart","chartTitle","setChartTitle","useEffect","mpostives","forEach","value","month","parseInt","Tarikh","split","kesPositifBaru","recovered","discajJumlah","labels","datasets","type","fill","yAxisID","tension","label","data","backgroundColor","borderColor","options","onClick","event","elements","length","chart","_chart","element","getElementAtEvent","xLabel","_index","dataset","_datasetIndex","indexOf","console","log","att","days","row","push","setDailyView","title","display","text","fontColor","fontSize","legend","position","scales","yAxes","id","ticks","beginAtZero","gridLines","color","xAxes","dailyOpt","className","style","width","height","jumlahTelahSembuhDiscaj","return_monthly","PUI","dataPUI","dataNPUI","dataPUIB","jumlahKesPUI","kesPUINegatif","kesPUIBaru","index","ShowDeath","donutData","setDonutData","matiKCH","matiBNTL","matiMIRI","matiSGB","maintainAspectRatio","responsive","hoverBackgroundColor","alignItems","arc","borderWidth","ShowPending","kesPUIPending","ShowAC","pieData","setPieData","dirawatKCH","dirawatBNTL","dirawatMIRI","dirawatSGB","justifyContent","ShowTC","jumlahKesPositif","App","loadingData","setLoadingData","setOverall","setHospital","isDefault","setDefault","buttonVal","setButtonVal","showTC","setShowTC","showAC","setShowAC","showPending","setShowPending","showDeath","setShowDeath","arrDay","i","button_view","button","Promise","all","csv","overall_data","hospital_data","then","results","tc","it","npui","ppui","jkm","oFinal","hFinal","dirawatJumlah","jumlahKesMati","flexDirection","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.94dde423.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/overall-statistics.29c65aa3.csv\";","export default __webpack_public_path__ + \"static/media/hospital-data.cfebbe68.csv\";","import React, { useEffect, useState } from 'react'\r\nimport { Bar } from 'react-chartjs-2'\r\n\r\nexport default function PositiveCases({overall, hospital, labelMonth, label_daily}) {\r\n\r\n    const [ isDaily, setDaily ] = useState()\r\n    const [ dailyChart , setDailyChart ] = useState()\r\n    const [ monthlyChart , setMonthlyChart ] = useState()\r\n    const [ chartTitle, setChartTitle ] = useState()\r\n\r\n    function setDailyView(att, month){\r\n        setMonthlyChart()\r\n        const days = label_daily(month)\r\n\r\n        var data = []\r\n        overall.forEach(row=>{\r\n            var m = parseInt(row.Tarikh.split('/')[1])-6\r\n            if(m == month){\r\n                data.push(row.kesPositifBaru)\r\n            }\r\n        })\r\n\r\n        setDaily(true)\r\n        setDailyChart({\r\n            labels: days,\r\n            datasets: [\r\n            {\r\n                type:'bar',\r\n                fill: false,\r\n                label: att,\r\n                data: data,\r\n              backgroundColor: 'rgba(255, 211, 105, 1)',\r\n            },\r\n            ]\r\n        })\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        var mpostives = [0, 0, 0, 0, 0, 0, 0]\r\n        overall.forEach(value=>{\r\n            var month = parseInt(value.Tarikh.split('/')[1]-6)\r\n            mpostives[month] += parseInt(value.kesPositifBaru)\r\n            \r\n        })\r\n\r\n        var recovered = [0, 0, 0, 0, 0, 0, 0]\r\n        hospital.forEach(value=>{\r\n            var month = parseInt(value.Tarikh.split('/')[1]-6)\r\n            recovered[month] += parseInt(value.discajJumlah)\r\n        })\r\n        \r\n        setMonthlyChart({\r\n          labels: labelMonth,\r\n          datasets: [\r\n            {\r\n                type:'line',\r\n                fill: false,\r\n                yAxisID: 'l',\r\n                tension: 0,\r\n                label: 'New Postive Cases',\r\n                data: mpostives,\r\n                backgroundColor: 'rgba(255, 211, 105, 1)',\r\n                borderColor: 'rgba(255, 211, 105, 1)',\r\n            },\r\n            {\r\n                type:'bar',\r\n                fill: true,\r\n                yAxisID: 'r',\r\n                label: 'New Recovery',\r\n                data: recovered,\r\n                backgroundColor: 'rgba(22, 199, 154, 1)',\r\n                borderColor: 'rgba(22, 199, 154, 1)'\r\n            },\r\n          ]\r\n        })\r\n        setDaily(false)\r\n        setChartTitle('New Positive Cases vs')\r\n    }, [])\r\n\r\n\r\n    \r\n    var options = {\r\n        onClick: (event, elements) => {\r\n            if(elements.length >0){\r\n                const chart = elements[0]._chart;\r\n                const element = chart.getElementAtEvent(event)[0];\r\n                const xLabel = chart.data.labels[element._index];\r\n                const dataset = chart.data.datasets[element._datasetIndex];\r\n        \r\n                const month = labelMonth.indexOf(xLabel)\r\n    \r\n                console.log(dataset.label + month)\r\n        \r\n                if(element._datasetIndex == 0){\r\n                setDailyView(dataset.label, month)\r\n    \r\n                setChartTitle(`${dataset.label} for ${xLabel}`)\r\n            }\r\n\r\n            }\r\n        },\r\n        title: {\r\n            display: true,\r\n            text: 'New Postive Cases vs New Recovery',\r\n            fontColor: 'white',\r\n            fontSize: 17\r\n        },\r\n        legend: {\r\n            labels:{\r\n                fontColor: 'white'\r\n            },\r\n            position: 'bottom'\r\n        },\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    id:'l',\r\n                    position: 'left',\r\n                    ticks: {\r\n                        beginAtZero:true,\r\n                        fontColor: 'white'\r\n                    },\r\n                    gridLines:{\r\n                        color: '#393e46'\r\n                    }\r\n                },\r\n                {\r\n                    id:'r',\r\n                    position: 'right',\r\n                    ticks: {\r\n                        beginAtZero:true,\r\n                        fontColor: 'white'\r\n                    },\r\n                    gridLines:{\r\n                        color: '#393e46'\r\n                    }\r\n                }\r\n            ],\r\n            xAxes: [\r\n                {\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                        fontColor: 'white'\r\n                    },\r\n                    gridLines:{\r\n                        color: '#393e46'\r\n                    }\r\n                }\r\n            ]\r\n        } \r\n    }\r\n\r\n    var dailyOpt = {\r\n        title: {\r\n            display: true,\r\n            text: chartTitle,\r\n            fontColor: 'white',\r\n            fontSize: 17\r\n        },\r\n        legend: {\r\n            labels:{\r\n                fontColor: 'white'\r\n            },\r\n            position: 'bottom'\r\n        },\r\n        scales: {\r\n            yAxes: [{\r\n                ticks: {\r\n                    beginAtZero:true,\r\n                    fontColor: 'white'\r\n                },\r\n                gridLines:{\r\n                    color: '#393e46'\r\n                }\r\n            }],\r\n            xAxes: [{\r\n                ticks: {\r\n                    beginAtZero: true,\r\n                    fontColor: 'white'\r\n                },\r\n                gridLines:{\r\n                    color: '#393e46'\r\n                }\r\n            }]\r\n        } \r\n    }\r\n\r\n    function return_monthly(){\r\n        setDailyChart()\r\n        var mpostives = [0, 0, 0, 0, 0, 0, 0]\r\n        var recovered = []\r\n        overall.forEach(value=>{\r\n            var month = parseInt(value.Tarikh.split('/')[1]-6)\r\n            mpostives[month] += parseInt(value.kesPositifBaru)\r\n            recovered[month] = value.jumlahTelahSembuhDiscaj\r\n            \r\n        })\r\n        \r\n        setMonthlyChart({\r\n          labels: labelMonth,\r\n          datasets: [\r\n            {\r\n                type:'line',\r\n                fill: true,\r\n                yAxisID: 'l',\r\n                label: 'New Postive Cases',\r\n                data: mpostives,\r\n                backgroundColor: 'rgba(255, 211, 105, 1)',\r\n                borderColor: 'rgba(255, 211, 105, 1)',\r\n            },\r\n            {\r\n                type:'bar',\r\n                fill: true,\r\n                yAxisID: 'r',\r\n                label: 'New Recovery',\r\n                data: recovered,\r\n                backgroundColor: 'rgba(22, 199, 154, 1)',\r\n                borderColor: 'rgba(22, 199, 154, 1)'\r\n            },\r\n          ]\r\n        })\r\n        setChartTitle('New Positive Cases')\r\n        setDaily(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className = 'default-chart-container'  style={{display: !isDaily ? 'block': 'none', width:'550px'}}>\r\n                {monthlyChart && <Bar height={250} data={monthlyChart} options={options} />}\r\n            </div>\r\n            <div className = 'default-chart-container'  style={{display: isDaily ? 'block': 'none', width:'550px'}}>\r\n                {dailyChart && <Bar height={250} data={dailyChart} options={dailyOpt} />}\r\n                <div className='monthly' onClick={()=>return_monthly()} style={{color:'white'}}>\r\n                Monthly\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Bar, HorizontalBar, Line } from 'react-chartjs-2'\r\n\r\nexport default function PUI({overall, labelMonth, label_daily}) {\r\n\r\n    const [ isDaily, setDaily ] = useState()\r\n    const [ dailyChart , setDailyChart ] = useState()\r\n    const [ monthlyChart , setMonthlyChart ] = useState()\r\n    const [ chartTitle, setChartTitle ] = useState()\r\n\r\n    function setDailyView(att, month){\r\n        setMonthlyChart()\r\n        console.log(att)\r\n        var data = []\r\n        switch (att) {\r\n            case 'New Cases':\r\n                overall.forEach(row=>{\r\n                    var m = parseInt(row.Tarikh.split('/')[1])-6\r\n                    if(m == month){\r\n                        data.push(row.kesPUIBaru)\r\n                    }\r\n                })\r\n            break;\r\n            case 'Negatives':\r\n                overall.forEach(row=>{\r\n                    var m = parseInt(row.Tarikh.split('/')[1])-6\r\n                    if(m == month){\r\n                        data.push(row.kesPUINegatif)\r\n                    }\r\n                })\r\n            break;\r\n            case 'Total':\r\n                overall.forEach(row=>{\r\n                    var m = parseInt(row.Tarikh.split('/')[1])-6\r\n                    if(m == month){\r\n                        data.push(row.jumlahKesPUI)\r\n                    }\r\n                })\r\n            break;\r\n        }\r\n        const days = label_daily(month)\r\n\r\n        setDaily(true)\r\n        setDailyChart({\r\n            labels: days,\r\n            datasets: [\r\n            {\r\n                type:'bar',\r\n                fill: false,\r\n                label: att,\r\n                data: data,\r\n                backgroundColor: 'rgba(255, 123, 84, 1)',\r\n                borderColor: 'rgba(255, 123, 84, 1)',\r\n            },\r\n            ]\r\n        })\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        var dataPUI = [], dataNPUI = [], dataPUIB = [0, 0, 0, 0, 0, 0, 0]\r\n        overall.forEach(value=>{\r\n            var month = parseInt(value.Tarikh.split('/')[1]-6)\r\n            dataPUI[month] = value.jumlahKesPUI\r\n            dataNPUI[month] = value.kesPUINegatif\r\n            dataPUIB[month] += parseInt(value.kesPUIBaru)\r\n        })\r\n\r\n        dataPUIB.forEach((value, index)=>{\r\n            dataPUIB[index] = parseInt(value / label_daily(index).length)\r\n        })\r\n        \r\n        setMonthlyChart({\r\n          labels: labelMonth,\r\n          datasets: [\r\n            {\r\n                type:'line',\r\n                fill: true,\r\n                yAxisID: 'l',\r\n                label: 'New Cases',\r\n                data: dataPUIB,\r\n                backgroundColor: 'rgba(187, 34, 5, 1)',\r\n                borderColor: 'rgba(187, 34, 5, 1)',\r\n            },\r\n            {\r\n                type:'line',\r\n                fill: true,\r\n                yAxisID: 'r',\r\n                label: 'Negatives',\r\n                data: dataNPUI,\r\n                backgroundColor: 'rgba(22, 199, 154, 1)',\r\n                borderColor: 'rgba(22, 199, 154, 1)',\r\n            },\r\n            {\r\n                type:'line',\r\n                fill: true,\r\n                label: 'Total',\r\n                data: dataPUI,\r\n                yAxisID: 'r',\r\n                backgroundColor: 'rgba(255, 123, 84, 1)',\r\n                borderColor: 'rgba(255, 123, 84, 1)',\r\n            },\r\n          ]\r\n        })\r\n        setDaily(false)\r\n    }, [])\r\n\r\n\r\n    \r\n    var options = {\r\n        onClick: (event, elements) => {\r\n            if(elements.length>0){\r\n                const chart = elements[0]._chart;\r\n                const element = chart.getElementAtEvent(event)[0];\r\n                const xLabel = chart.data.labels[element._index];\r\n                const dataset = chart.data.datasets[element._datasetIndex];\r\n        \r\n                const month = labelMonth.indexOf(xLabel)\r\n        \r\n                setDailyView(dataset.label, month)\r\n    \r\n                setChartTitle(`${dataset.label} for ${xLabel}`)\r\n            \r\n\r\n            }\r\n        },\r\n        title: {\r\n            display: true,\r\n            text: 'Person Under Investigations (PUI)',\r\n            fontColor: 'white',\r\n            fontSize: 17\r\n        },\r\n        legend: {\r\n            labels: {\r\n                fontColor: 'white'\r\n            },\r\n            position: 'bottom'\r\n        },\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    type: 'linear',\r\n                    id: 'r',\r\n                    position: 'right',\r\n                    ticks: {\r\n                        beginAtZero:true,\r\n                        fontColor: 'white'\r\n                    },\r\n                    gridLines:{\r\n                        color: '#393e46'\r\n                    }\r\n                },\r\n                {\r\n                    type: 'linear',\r\n                    id: 'l',\r\n                    position: 'left',\r\n                    ticks: {\r\n                        beginAtZero:true,\r\n                        fontColor: 'white'\r\n                    },\r\n                    gridLines:{\r\n                        color: '#393e46'\r\n                    }\r\n                },\r\n            ],\r\n            xAxes: [{\r\n                ticks: {\r\n                    beginAtZero: true,\r\n                    fontColor: 'white'\r\n                },\r\n                gridLines:{\r\n                    color: '#393e46'\r\n                }\r\n            }]\r\n        } \r\n    }\r\n\r\n    var dailyOpt = {\r\n        title: {\r\n            display: true,\r\n            text: chartTitle,\r\n            fontColor: 'white',\r\n            fontSize: 17\r\n        },\r\n        legend: {\r\n            labels: {\r\n                fontColor: 'white'\r\n            },\r\n            position: 'bottom'\r\n        },\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    type: 'linear',\r\n                    id: 'l',\r\n                    position: 'left',\r\n                    ticks: {\r\n                        beginAtZero:true,\r\n                        fontColor: 'white'\r\n                    },\r\n                    gridLines:{\r\n                        color: '#393e46'\r\n                    }\r\n                },\r\n            ],\r\n            xAxes: [{\r\n                ticks: {\r\n                    beginAtZero: true,\r\n                    fontColor: 'white'\r\n                },\r\n                gridLines:{\r\n                    color: '#393e46'\r\n                }\r\n            }]\r\n        } \r\n    }\r\n\r\n    function return_monthly(){\r\n        var dataPUI = [], dataNPUI = [], dataPUIB = [0, 0, 0, 0, 0, 0, 0]\r\n        overall.forEach(value=>{\r\n            var month = parseInt(value.Tarikh.split('/')[1]-6)\r\n            dataPUI[month] = value.jumlahKesPUI\r\n            dataNPUI[month] = value.kesPUINegatif\r\n            dataPUIB[month] += parseInt(value.kesPUIBaru)\r\n        })\r\n\r\n        dataPUIB.forEach((value, index)=>{\r\n            dataPUIB[index] = parseInt(value / label_daily(index).length)\r\n        })\r\n        \r\n        setMonthlyChart({\r\n          labels: labelMonth,\r\n          datasets: [\r\n            {\r\n                type:'line',\r\n                fill: true,\r\n                yAxisID: 'l',\r\n                label: 'New Cases',\r\n                data: dataPUIB,\r\n                backgroundColor: 'rgba(187, 34, 5, 1)',\r\n                borderColor: 'rgba(187, 34, 5, 1)',\r\n            },\r\n            {\r\n                type:'line',\r\n                fill: true,\r\n                yAxisID: 'r',\r\n                label: 'Negatives',\r\n                data: dataNPUI,\r\n                backgroundColor: 'rgba(50, 224, 196, 1)',\r\n                borderColor: 'rgba(50, 224, 196, 1)',\r\n            },\r\n            {\r\n                type:'line',\r\n                fill: true,\r\n                label: 'Total',\r\n                data: dataPUI,\r\n                yAxisID: 'r',\r\n                backgroundColor: 'rgba(255, 123, 84, 1)',\r\n                borderColor: 'rgba(255, 123, 84, 1)',\r\n            },\r\n          ]\r\n        })\r\n        setDaily(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className = 'default-chart-container'  style={{display: !isDaily ? 'block': 'none', width:'550px'}}>\r\n                {monthlyChart && <Line height={250} data={monthlyChart} options={options} />}\r\n            </div>\r\n            <div className = 'default-chart-container'  style={{display: isDaily ? 'block': 'none', width:'550px'}}>\r\n                {dailyChart && <Line height={250} data={dailyChart} options={dailyOpt} />}\r\n                <div className='monthly' onClick={()=>return_monthly()} style={{color:'white'}}>\r\n                Monthly\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Doughnut } from 'react-chartjs-2'\r\n\r\nexport default function ShowDeath({hospital}) {\r\n\r\n    //matiKCH,matiSIBU,matiBNTL,matiMIRI,matiSGB\r\n    const [ donutData, setDonutData ] = useState()\r\n\r\n    useEffect(()=>{\r\n        var data = []\r\n        hospital.forEach(value=>{\r\n            data[0] = value.matiKCH\r\n            data[1] = value.matiBNTL\r\n            data[2] = value.matiMIRI\r\n            data[3] = value.matiSGB\r\n        })\r\n\r\n        setDonutData({\r\n            maintainAspectRatio: true,\r\n            responsive: true,\r\n            labels: [\"Kuching\", \"Bintulu\", \"Miri\", \"Sg. Buloh\"],\r\n            datasets: [\r\n              {\r\n                data: data,\r\n                backgroundColor: ['#f0a500', '#006a71', '#e97171', '#5d54a4'],\r\n                hoverBackgroundColor: ['#f0a500', '#006a71', '#e97171', '#5d54a4']\r\n              }\r\n            ]\r\n        })\r\n    })\r\n\r\n    const options = {\r\n        legend: {\r\n          display: true,\r\n          position: \"top\",\r\n          labels:{\r\n              fontSize: 17,\r\n              fontColor: 'white'\r\n          }\r\n        },\r\n        elements: {\r\n          arc: {\r\n            borderWidth: 0\r\n          }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{width:'500px', height: '500px', display:'flex', alignItems:'center'}}>\r\n            <Doughnut height={200} data={{...donutData, }} options={{...options}} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Bar, HorizontalBar } from 'react-chartjs-2'\r\n\r\nexport default function ShowPending({overall, labelMonth, label_daily}) {\r\n\r\n    const [ isDaily, setDaily ] = useState()\r\n    const [ dailyChart , setDailyChart ] = useState()\r\n    const [ monthlyChart , setMonthlyChart ] = useState()\r\n    const [ chartTitle, setChartTitle ] = useState()\r\n\r\n    function setDailyView(att, month){\r\n        setMonthlyChart()\r\n        const days = label_daily(month)\r\n\r\n        var data = []\r\n        overall.forEach(row=>{\r\n            var m = parseInt(row.Tarikh.split('/')[1])-6\r\n            if(m == month){\r\n                data.push(row.kesPUIPending)\r\n            }\r\n        })\r\n\r\n        setDaily(true)\r\n        setDailyChart({\r\n            labels: days,\r\n            datasets: [\r\n            {\r\n                fill: false,\r\n                label: att,\r\n                data: data,\r\n                backgroundColor: 'rgba(22, 199, 154, 1)',\r\n            },\r\n            ]\r\n        })\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        var mpostives = [ 0, 0, 0, 0, 0, 0, 0 ]\r\n        overall.forEach(value=>{\r\n            var month = parseInt(value.Tarikh.split('/')[1]-6)\r\n            console.log(value)\r\n            mpostives[month] += parseInt(value.kesPUIPending)\r\n        })\r\n        \r\n        setMonthlyChart({\r\n          labels: labelMonth,\r\n          datasets: [\r\n            {\r\n                fill: false,\r\n                label: 'Pending PUI',\r\n                data: mpostives,\r\n                backgroundColor: 'rgba(22, 199, 154, 1)',\r\n            },\r\n          ]\r\n        })\r\n        setDaily(false)\r\n        setChartTitle('Total Pending PUI')\r\n    }, [])\r\n\r\n\r\n    \r\n    var options = {\r\n        onClick: (event, elements) => {\r\n            const chart = elements[0]._chart;\r\n            const element = chart.getElementAtEvent(event)[0];\r\n            const xLabel = chart.data.labels[element._index];\r\n            const dataset = chart.data.datasets[element._datasetIndex];\r\n    \r\n            const month = labelMonth.indexOf(xLabel)\r\n\r\n            console.log(dataset.label + month)\r\n    \r\n            if(element._datasetIndex == 0){\r\n            setDailyView(dataset.label, month)\r\n\r\n            setChartTitle(`${dataset.label} for ${xLabel}`)\r\n\r\n            }\r\n        },\r\n        title: {\r\n            display: true,\r\n            text: 'Total Pending PUI',\r\n            fontColor: 'white',\r\n            fontSize: 17\r\n        },\r\n        legend: {\r\n            labels: {\r\n                fontColor: 'white'\r\n            },\r\n            position: 'bottom'\r\n        },\r\n        scales: {\r\n            yAxes: [{\r\n                ticks: {\r\n                    beginAtZero:true,\r\n                    fontColor: 'white'\r\n                },\r\n                gridLines:{\r\n                    color: '#393e46'\r\n                }\r\n            }],\r\n            xAxes: [{\r\n                ticks: {\r\n                    beginAtZero: true,\r\n                    fontColor: 'white'\r\n                },\r\n                gridLines:{\r\n                    color: '#393e46'\r\n                }\r\n            }]\r\n        } \r\n    }\r\n\r\n    var dailyOpt = {\r\n        title: {\r\n            display: true,\r\n            text: chartTitle,\r\n            fontColor: 'white',\r\n            fontSize: 17\r\n        },\r\n        legend: {\r\n            labels: {\r\n                fontColor: 'white'\r\n            },\r\n            position: 'bottom'\r\n        },\r\n        scales: {\r\n            yAxes: [{\r\n                ticks: {\r\n                    beginAtZero:true,\r\n                    fontColor: 'white'\r\n                },\r\n                gridLines:{\r\n                    color: '#393e46'\r\n                }\r\n            }],\r\n            xAxes: [{\r\n                ticks: {\r\n                    beginAtZero: true,\r\n                    fontColor: 'white'\r\n                },\r\n                gridLines:{\r\n                    color: '#393e46'\r\n                }\r\n            }]\r\n        } \r\n    }\r\n\r\n    function return_monthly(){\r\n        setDailyChart()\r\n        var mpostives = []\r\n        overall.forEach(value=>{\r\n            var month = parseInt(value.Tarikh.split('/')[1]-6)\r\n            mpostives[month] = value.kesPUIPending\r\n        })\r\n        \r\n        setMonthlyChart({\r\n          labels: labelMonth,\r\n          datasets: [\r\n            {\r\n                fill: false,\r\n                label: 'Pending PUI',\r\n                data: mpostives,\r\n                backgroundColor: 'rgba(22, 199, 154, 1)',\r\n            },\r\n          ]\r\n        })\r\n        setChartTitle('Total Pending PUI')\r\n        setDaily(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className = 'default-chart-container'  style={{display: !isDaily ? 'block': 'none', width:'50%', alignItems:'center'}}>\r\n                {monthlyChart && <HorizontalBar height={175} data={monthlyChart} options={options} />}\r\n            </div>\r\n            <div className = 'default-chart-container'  style={{display: isDaily ? 'block': 'none', width: '50%', alignItems:'center'}}>\r\n                {dailyChart && <HorizontalBar height={175} data={dailyChart} options={dailyOpt} />}\r\n                <div className='monthly' onClick={()=>return_monthly()} style={{color:'white'}}>\r\n                Monthly\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Pie } from 'react-chartjs-2'\r\n\r\nexport default function ShowAC({hospital}) {\r\n\r\n    const [ pieData, setPieData ] = useState()\r\n\r\n    useEffect(()=>{\r\n\r\n        var data = []\r\n        hospital.forEach(value=>{\r\n            data[0] = value.dirawatKCH\r\n            data[1] = value.dirawatBNTL\r\n            data[2] = value.dirawatMIRI\r\n            data[3] = value.dirawatSGB\r\n        })\r\n\r\n        setPieData({\r\n            maintainAspectRatio: true,\r\n            responsive: true,\r\n            labels: [\"Kuching\", \"Bintulu\", \"Miri\", \"Sg. Buloh\"],\r\n            datasets: [\r\n              {\r\n                data: data,\r\n                backgroundColor: ['#f0a500', '#006a71', '#e97171', '#5d54a4'],\r\n                hoverBackgroundColor: ['#f0a500', '#006a71', '#e97171', '#5d54a4']\r\n              }\r\n            ]\r\n        })\r\n\r\n    }, [])\r\n\r\n    const options = {\r\n        legend: {\r\n          display: true,\r\n          position: \"top\",\r\n          labels:{\r\n              fontSize: 17,\r\n              fontColor: 'white'\r\n          }\r\n        },\r\n        elements: {\r\n          arc: {\r\n            borderWidth: 0\r\n          }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{width:'500px', height: '500px', display:'flex', justifyContent:'start', alignItems:'center'}}>\r\n            <Pie height={200}  data={pieData} options={options} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Bar, HorizontalBar, Line } from 'react-chartjs-2'\r\n\r\nexport default function ShowTC({overall, labelMonth, label_daily}) {\r\n\r\n    const [ isDaily, setDaily ] = useState()\r\n    const [ dailyChart , setDailyChart ] = useState()\r\n    const [ monthlyChart , setMonthlyChart ] = useState()\r\n    const [ chartTitle, setChartTitle ] = useState()\r\n\r\n    function setDailyView(att, month){\r\n        setMonthlyChart()\r\n        const days = label_daily(month)\r\n\r\n        var data = []\r\n        overall.forEach(row=>{\r\n            var m = parseInt(row.Tarikh.split('/')[1])-6\r\n            if(m == month){\r\n                data.push(row.jumlahKesPositif)\r\n            }\r\n        })\r\n\r\n        setDaily(true)\r\n        setDailyChart({\r\n            labels: days,\r\n            datasets: [\r\n            {\r\n                fill: true,\r\n                label: att,\r\n                data: data,\r\n                backgroundColor: 'rgba(22, 199, 154, 1)',\r\n                borderColor: 'rgba(22, 199, 154, 1)',\r\n            },\r\n            ]\r\n        })\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        var mpostives = [ 0, 0, 0, 0, 0, 0, 0 ]\r\n        overall.forEach(value=>{\r\n            var month = parseInt(value.Tarikh.split('/')[1]-6)\r\n            console.log(value)\r\n            mpostives[month] += parseInt(value.jumlahKesPositif)\r\n        })\r\n        \r\n        setMonthlyChart({\r\n          labels: labelMonth,\r\n          datasets: [\r\n            {\r\n                fill: true,\r\n                label: 'Positive Cases',\r\n                data: mpostives,\r\n                backgroundColor: 'rgba(22, 199, 154, 1)',\r\n                borderColor: 'rgba(22, 199, 154, 1)',\r\n            },\r\n          ]\r\n        })\r\n        setDaily(false)\r\n        setChartTitle('Total Positive Cases')\r\n    }, [])\r\n\r\n\r\n    \r\n    var options = {\r\n        onClick: (event, elements) => {\r\n            if(elements.length > 0){\r\n                const chart = elements[0]._chart;\r\n                const element = chart.getElementAtEvent(event)[0];\r\n                const xLabel = chart.data.labels[element._index];\r\n                const dataset = chart.data.datasets[element._datasetIndex];\r\n        \r\n                const month = labelMonth.indexOf(xLabel)\r\n    \r\n                console.log(dataset.label + month)\r\n        \r\n                if(element._datasetIndex == 0){\r\n                setDailyView(dataset.label, month)\r\n    \r\n                setChartTitle(`${dataset.label} for ${xLabel}`)\r\n            }\r\n\r\n            }\r\n        },\r\n        title: {\r\n            display: true,\r\n            text: 'Total Positive Cases',\r\n            fontColor: 'white',\r\n            fontSize: 17\r\n        },\r\n        legend: {\r\n            labels: {\r\n                fontColor: 'white'\r\n            },\r\n            position: 'bottom'\r\n        },\r\n        scales: {\r\n            yAxes: [{\r\n                ticks: {\r\n                    beginAtZero:true,\r\n                    fontColor: 'white'\r\n                },\r\n                gridLines:{\r\n                    color: '#393e46'\r\n                }\r\n            }],\r\n            xAxes: [{\r\n                ticks: {\r\n                    beginAtZero: true,\r\n                    fontColor: 'white'\r\n                },\r\n                gridLines:{\r\n                    color: '#393e46'\r\n                }\r\n            }]\r\n        } \r\n    }\r\n\r\n    var dailyOpt = {\r\n        title: {\r\n            display: true,\r\n            text: chartTitle,\r\n            fontColor: 'white',\r\n            fontSize: 17\r\n        },\r\n        legend: {\r\n            labels: {\r\n                fontColor: 'white'\r\n            },\r\n            position: 'bottom'\r\n        },\r\n        scales: {\r\n            yAxes: [{\r\n                ticks: {\r\n                    beginAtZero:true,\r\n                    fontColor: 'white'\r\n                },\r\n                gridLines:{\r\n                    color: '#393e46'\r\n                }\r\n            }],\r\n            xAxes: [{\r\n                ticks: {\r\n                    beginAtZero: true,\r\n                    fontColor: 'white'\r\n                },\r\n                gridLines:{\r\n                    color: '#393e46'\r\n                }\r\n            }]\r\n        } \r\n    }\r\n\r\n    function return_monthly(){\r\n        setDailyChart()\r\n        var mpostives = []\r\n        overall.forEach(value=>{\r\n            var month = parseInt(value.Tarikh.split('/')[1]-6)\r\n            mpostives[month] = value.jumlahKesPositif\r\n        })\r\n        \r\n        setMonthlyChart({\r\n          labels: labelMonth,\r\n          datasets: [\r\n            {\r\n                fill: true,\r\n                label: 'Positive Cases',\r\n                data: mpostives,\r\n                backgroundColor: 'rgba(22, 199, 154, 1)',\r\n                borderColor: 'rgba(22, 199, 154, 1)',\r\n            },\r\n          ]\r\n        })\r\n        setChartTitle('Total Positive Cases')\r\n        setDaily(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className = 'default-chart-container'  style={{display: !isDaily ? 'block': 'none', width:'50%', alignItems:'center'}}>\r\n                {monthlyChart && <Line height={175} data={monthlyChart} options={options} />}\r\n            </div>\r\n            <div className = 'default-chart-container'  style={{display: isDaily ? 'block': 'none', width: '50%', alignItems:'center'}}>\r\n                {dailyChart && <Line height={175} data={dailyChart} options={dailyOpt} />}\r\n                <div className='monthly' onClick={()=>return_monthly()} style={{color:'white'}}>\r\n                Monthly\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","\nimport './App.css';\nimport overall_data from './data/overall-statistics.csv';\nimport hospital_data from './data/hospital-data.csv'; \nimport { csv } from \"d3\";\nimport { useEffect, useState } from 'react';\nimport { Bar, Line } from 'react-chartjs-2';\nimport PositiveCases from './PositiveCases';\nimport ThirdChart from './ThirdChart';\nimport Recovered from './Recovered';\nimport PUI from './PUI';\nimport ShowDeath from './ShowDeath';\nimport ShowPending from './ShowPending';\nimport ShowAC from './ShowAC';\nimport ShowTC from './ShowTC';\n\nfunction App() {\n\n  const [ loadingData, setLoadingData ] = useState(true)\n  const [ overall, setOverall ] = useState()\n  const [ hospital, setHospital ] = useState()\n  const [ isDefault, setDefault ] = useState()\n  const [ buttonVal, setButtonVal ] = useState()\n  const [ showTC, setShowTC ] = useState()\n  const [ showAC, setShowAC ] = useState()\n  const [ showPending, setShowPending ] = useState()\n  const [ showDeath, setShowDeath ] = useState()\n\n  const labelMonth = [\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December'\n  ]\n\n  function label_daily(month){\n    var days = 0\n    var arrDay = []\n    switch (month) {\n      case 0: days=30; break;\n      case 1: days=31; break;\n      case 2: days=31; break;\n      case 3: days=30; break;\n      case 4: days=31; break;\n      case 5: days=30; break;\n      case 6: days=31; break;\n    }\n\n    for(var i = 1; i < days+1; i ++){\n      arrDay.push(i)\n    }\n    return arrDay\n  }\n\n  //get data for all month (jumlah kes positif x jumlah recovered)\n  useEffect(()=>{\n    if(loadingData)\n    Promise.all([csv(overall_data), csv(hospital_data)]).then(results=>{\n      var data  = { tc: 0, it: 0, npui: 0, ppui: 0,  jkm: 0}\n      var oFinal = results[0][results[0].length-1]\n      var hFinal = results[1][results[1].length-1]\n      data.tc = oFinal.jumlahKesPositif\n      data.it = hFinal.dirawatJumlah\n      data.npui = oFinal.kesPUINegatif\n\n      results[0].forEach(value=>{\n        data.ppui += parseInt(value.kesPUIPending)\n      })\n\n      data.jkm = oFinal.jumlahKesMati\n      setButtonVal(data)\n      setOverall(results[0])\n      setHospital(results[1])\n      setDefault(true)\n      setLoadingData(false)\n\n    })\n  }, [])\n\n  function button_view(button){\n    setDefault(false)\n    switch (button) {\n      case 'tc':\n        setShowTC(true)\n        setShowAC(false)\n        setShowPending(false)\n        setShowDeath(false)\n      break;\n      case 'ac':\n        setShowTC(false)\n        setShowAC(true)\n        setShowPending(false)\n        setShowDeath(false)\n      break;\n      case 'jkm':\n        setShowTC(false)\n        setShowDeath(true)\n        setShowAC(false)\n        setShowPending(false)\n      break;\n      case 'ppui':\n        setShowTC(false)\n        setShowPending(true)\n        setShowAC(false)\n        setShowDeath(false)\n      break;\n    }\n  }\n\n  function view_default(){\n    setDefault(true)\n    setShowTC(false)\n    setShowPending(false)\n    setShowAC(false)\n    setShowDeath(false)\n  }\n\n  return (\n    <div className=\"container lilita\">\n\n      <div className='brand-name' onClick={()=>view_default()}>\n          Sarawak COVID-19 Data Visualization Dashboard\n          <div className=\"brand-date\">\n            (June 2020 - December 2020)\n          </div>\n      </div>\n\n      <div className='top-nav'>\n        {/*  #ffd369 #ff884b #f05454 #*/}\n        <div className='button' onClick={()=>button_view('tc')}> \n            <div className='value' style={{backgroundColor:'rgb(255, 242, 0)'}}>\n              {buttonVal && buttonVal.tc}\n            </div>\n            Total Cases\n        </div>\n        <div className='button' onClick={()=>button_view('ac')}>\n            <div className='value' style={{backgroundColor:'rgb(255, 127, 39'}}>\n              {buttonVal && buttonVal.it}\n            </div>\n            Active Cases\n        </div>\n        {/* <div className='button'>\n            <div className='value' style={{backgroundColor: '#16c79a'}}>\n              {buttonVal && buttonVal.npui}\n            </div>\n            Negatives\n        </div> */}\n        <div className='button' onClick={()=>button_view('jkm')}>\n            <div className='value' style={{backgroundColor: 'rgb(237, 28, 36)'}}>\n              {buttonVal && buttonVal.jkm}\n            </div>\n            Total Death\n        </div>\n        <div className='button' onClick={()=>button_view('ppui')}>\n            <div className='value' style={{backgroundColor: '#a6a9b6'}}>\n              {buttonVal && buttonVal.ppui}\n            </div>\n            Pending PUI\n        </div>\n      </div>\n\n      <div className='vars' style={{display: !isDefault ? 'flex' : 'none', width:'100%', alignItems:'center', justifyContent:'center'}}>\n          {showDeath && <ShowDeath hospital={hospital} />}\n          {showPending && <ShowPending overall={overall} labelMonth={labelMonth} label_daily={label_daily} />}\n          {showAC && <ShowAC hospital={hospital} />}\n          {showTC && <ShowTC overall={overall} labelMonth={labelMonth} label_daily={label_daily} />}\n      </div>\n      <div className='default' style={{display: isDefault ? 'flex' : 'none', flexDirection:'column'}}>\n        <div className='row-1' style={{display: 'flex', flexDirection: 'row'}}>\n            <div className='default-chart new-cases'>\n              { isDefault && <PositiveCases overall={overall} hospital={hospital} labelMonth={labelMonth} label_daily={label_daily} />}\n            </div>\n            <div className='default-chart pui'>\n              { isDefault && <PUI overall={overall} labelMonth={labelMonth} label_daily={label_daily} />}\n            </div>\n            {/* <div className='default-chart recovered'>\n              { isDefault && <Recovered overall={overall} labelMonth={labelMonth} label_daily={label_daily} />}\n            </div> */}\n        </div>\n        <div className='row-2' style={{display: 'flex', flexDirection: 'row', alignItems:'center', justifyContent:'center'}}>\n            {/* <div className='default-chart death'>\n              { isDefault && <ThirdChart overall={overall} labelMonth={labelMonth} label_daily={label_daily} />}\n            </div> */}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}