{"version":3,"sources":["data/overall-statistics.csv","data/hospital-data.csv","PositiveCases.jsx","PUI.jsx","ShowDeath.jsx","App.js","index.js"],"names":["PositiveCases","overall","labelMonth","label_daily","useState","isDaily","setDaily","dailyChart","setDailyChart","monthlyChart","setMonthlyChart","chartTitle","setChartTitle","useEffect","mpostives","recovered","forEach","value","month","parseInt","Tarikh","split","kesPositifBaru","jumlahTelahSembuhDiscaj","labels","datasets","type","fill","yAxisID","label","data","backgroundColor","borderColor","options","onClick","event","elements","chart","_chart","element","getElementAtEvent","xLabel","_index","dataset","_datasetIndex","indexOf","console","log","att","days","row","push","setDailyView","title","display","text","fontColor","fontSize","legend","position","scales","yAxes","id","ticks","beginAtZero","xAxes","dailyOpt","className","style","height","return_monthly","color","PUI","dataPUI","dataNPUI","dataPUIB","jumlahKesPUI","kesPUINegatif","kesPUIBaru","length","ShowDeath","hospital","donutData","setDonutData","matiKCH","matiBNTL","matiMIRI","matiSGB","maintainAspectRatio","responsive","hoverBackgroundColor","width","alignItems","arc","borderWidth","App","loadingData","setLoadingData","setOverall","setHospital","isDefault","setDefault","buttonVal","setButtonVal","showDeath","setShowDeath","arrDay","i","button_view","button","Promise","all","csv","overall_data","hospital_data","then","results","tc","it","npui","ppui","jkm","oFinal","hFinal","jumlahKesPositif","dirawatJumlah","kesPUIPending","jumlahKesMati","flexDirection","justifyContent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.97b9d36a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/overall-statistics.29c65aa3.csv\";","export default __webpack_public_path__ + \"static/media/hospital-data.cfebbe68.csv\";","import React, { useEffect, useState } from 'react'\r\nimport { Bar } from 'react-chartjs-2'\r\n\r\nexport default function PositiveCases({overall, labelMonth, label_daily}) {\r\n\r\n    const [ isDaily, setDaily ] = useState()\r\n    const [ dailyChart , setDailyChart ] = useState()\r\n    const [ monthlyChart , setMonthlyChart ] = useState()\r\n    const [ chartTitle, setChartTitle ] = useState()\r\n\r\n    function setDailyView(att, month){\r\n        setMonthlyChart()\r\n        const days = label_daily(month)\r\n\r\n        var data = []\r\n        overall.forEach(row=>{\r\n            var m = parseInt(row.Tarikh.split('/')[1])-6\r\n            if(m == month){\r\n                data.push(row.kesPositifBaru)\r\n            }\r\n        })\r\n\r\n        setDaily(true)\r\n        setDailyChart({\r\n            labels: days,\r\n            datasets: [\r\n            {\r\n                type:'bar',\r\n                fill: false,\r\n                label: att,\r\n                data: data,\r\n              backgroundColor: 'rgba(255, 211, 105, 1)',\r\n            },\r\n            ]\r\n        })\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        var mpostives = [0, 0, 0, 0, 0, 0, 0]\r\n        var recovered = []\r\n        overall.forEach(value=>{\r\n            var month = parseInt(value.Tarikh.split('/')[1]-6)\r\n            mpostives[month] += parseInt(value.kesPositifBaru)\r\n            recovered[month] = value.jumlahTelahSembuhDiscaj\r\n            \r\n        })\r\n        \r\n        setMonthlyChart({\r\n          labels: labelMonth,\r\n          datasets: [\r\n            {\r\n                type:'line',\r\n                fill: true,\r\n                yAxisID: 'l',\r\n                label: 'New Postive Cases',\r\n                data: mpostives,\r\n                backgroundColor: 'rgba(255, 211, 105, 1)',\r\n                borderColor: 'rgba(255, 211, 105, 1)',\r\n            },\r\n            {\r\n                type:'bar',\r\n                fill: true,\r\n                yAxisID: 'r',\r\n                label: 'Total Recovered',\r\n                data: recovered,\r\n                backgroundColor: 'rgba(22, 199, 154, 1)',\r\n                borderColor: 'rgba(22, 199, 154, 1)'\r\n            },\r\n          ]\r\n        })\r\n        setDaily(false)\r\n        setChartTitle('New Positive Cases')\r\n    }, [])\r\n\r\n\r\n    \r\n    var options = {\r\n        onClick: (event, elements) => {\r\n            const chart = elements[0]._chart;\r\n            const element = chart.getElementAtEvent(event)[0];\r\n            const xLabel = chart.data.labels[element._index];\r\n            const dataset = chart.data.datasets[element._datasetIndex];\r\n    \r\n            const month = labelMonth.indexOf(xLabel)\r\n\r\n            console.log(dataset.label + month)\r\n    \r\n            if(element._datasetIndex == 0){\r\n            setDailyView(dataset.label, month)\r\n\r\n            setChartTitle(`${dataset.label} for ${xLabel}`)\r\n\r\n            }\r\n        },\r\n        title: {\r\n            display: true,\r\n            text: 'New Postive Cases',\r\n            fontColor: 'white',\r\n            fontSize: 17\r\n        },\r\n        legend: {\r\n            labels: {\r\n                fontColor: 'white'\r\n            },\r\n            position: 'bottom'\r\n        },\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    id:'l',\r\n                    position: 'left',\r\n                    ticks: {\r\n                        beginAtZero:true,\r\n                        fontColor: 'white'\r\n                    },\r\n                },\r\n                {\r\n                    id:'r',\r\n                    position: 'right',\r\n                    ticks: {\r\n                        beginAtZero:true,\r\n                        fontColor: 'white'\r\n                    },\r\n                }\r\n            ],\r\n            xAxes: [\r\n                {\r\n                    ticks: {\r\n                        beginAtZero: true,\r\n                        fontColor: 'white'\r\n                    },\r\n                }\r\n            ]\r\n        } \r\n    }\r\n\r\n    var dailyOpt = {\r\n        title: {\r\n            display: true,\r\n            text: chartTitle,\r\n            fontColor: 'white',\r\n            fontSize: 17\r\n        },\r\n        legend: {\r\n            labels: {\r\n                fontColor: 'white'\r\n            },\r\n            position: 'bottom'\r\n        },\r\n        scales: {\r\n            yAxes: [{\r\n                ticks: {\r\n                    beginAtZero:true,\r\n                    fontColor: 'white'\r\n                },\r\n            }],\r\n            xAxes: [{\r\n                ticks: {\r\n                    beginAtZero: true,\r\n                    fontColor: 'white'\r\n                },\r\n            }]\r\n        } \r\n    }\r\n\r\n    function return_monthly(){\r\n        setDailyChart()\r\n        var mpostives = [0, 0, 0, 0, 0, 0, 0]\r\n        var recovered = []\r\n        overall.forEach(value=>{\r\n            var month = parseInt(value.Tarikh.split('/')[1]-6)\r\n            mpostives[month] += parseInt(value.kesPositifBaru)\r\n            recovered[month] = value.jumlahTelahSembuhDiscaj\r\n            \r\n        })\r\n        \r\n        setMonthlyChart({\r\n          labels: labelMonth,\r\n          datasets: [\r\n            {\r\n                type:'bar',\r\n                fill: false,\r\n                yAxisID: 'l',\r\n                label: 'New Postive Cases',\r\n                data: mpostives,\r\n                backgroundColor: 'rgba(255, 211, 105, 1)',\r\n            },\r\n            {\r\n                type:'line',\r\n                fill: true,\r\n                yAxisID: 'r',\r\n                label: 'Total Recovered',\r\n                data: recovered,\r\n                backgroundColor: 'rgba(22, 199, 154, 1)',\r\n                borderColor: 'rgba(22, 199, 154, 1)'\r\n            },\r\n          ]\r\n        })\r\n        setChartTitle('New Positive Cases')\r\n        setDaily(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className = 'default-chart-container'  style={{display: !isDaily ? 'block': 'none'}}>\r\n                {monthlyChart && <Bar height={200} data={monthlyChart} options={options} />}\r\n            </div>\r\n            <div className = 'default-chart-container'  style={{display: isDaily ? 'block': 'none'}}>\r\n                {dailyChart && <Bar height={200} data={dailyChart} options={dailyOpt} />}\r\n                <div className='monthly' onClick={()=>return_monthly()} style={{color:'white'}}>\r\n                Monthly\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Bar, HorizontalBar, Line } from 'react-chartjs-2'\r\n\r\nexport default function PUI({overall, labelMonth, label_daily}) {\r\n\r\n    const [ isDaily, setDaily ] = useState()\r\n    const [ dailyChart , setDailyChart ] = useState()\r\n    const [ monthlyChart , setMonthlyChart ] = useState()\r\n    const [ chartTitle, setChartTitle ] = useState()\r\n\r\n    function setDailyView(att, month){\r\n        setMonthlyChart()\r\n        console.log(att)\r\n        var data = []\r\n        switch (att) {\r\n            case 'Confirmed Cases':\r\n                overall.forEach(row=>{\r\n                    var m = parseInt(row.Tarikh.split('/')[1])-6\r\n                    if(m == month){\r\n                        data.push(row.kesPUIBaru)\r\n                    }\r\n                })\r\n            break;\r\n            case 'Negatives':\r\n                overall.forEach(row=>{\r\n                    var m = parseInt(row.Tarikh.split('/')[1])-6\r\n                    if(m == month){\r\n                        data.push(row.kesPUINegatif)\r\n                    }\r\n                })\r\n            break;\r\n            case 'Total Cases':\r\n                overall.forEach(row=>{\r\n                    var m = parseInt(row.Tarikh.split('/')[1])-6\r\n                    if(m == month){\r\n                        data.push(row.jumlahKesPUI)\r\n                    }\r\n                })\r\n            break;\r\n        }\r\n        const days = label_daily(month)\r\n\r\n        setDaily(true)\r\n        setDailyChart({\r\n            labels: days,\r\n            datasets: [\r\n            {\r\n                type:'bar',\r\n                fill: false,\r\n                label: att,\r\n                data: data,\r\n                backgroundColor: 'rgba(255, 123, 84, 1)',\r\n                borderColor: 'rgba(255, 123, 84, 1)',\r\n            },\r\n            ]\r\n        })\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        var dataPUI = [], dataNPUI = [], dataPUIB = []\r\n        overall.forEach(value=>{\r\n            var month = parseInt(value.Tarikh.split('/')[1]-6)\r\n            dataPUI[month] = value.jumlahKesPUI\r\n            dataNPUI[month] = value.kesPUINegatif\r\n            dataPUIB[month] = value.kesPUIBaru\r\n        })\r\n        \r\n        setMonthlyChart({\r\n          labels: labelMonth,\r\n          datasets: [\r\n            {\r\n                type:'line',\r\n                fill: true,\r\n                yAxisID: 'l',\r\n                label: 'Confirmed Cases',\r\n                data: dataPUIB,\r\n                backgroundColor: 'rgba(187, 34, 5, 1)',\r\n                borderColor: 'rgba(187, 34, 5, 1)',\r\n            },\r\n            {\r\n                type:'line',\r\n                fill: true,\r\n                yAxisID: 'r',\r\n                label: 'Negatives',\r\n                data: dataNPUI,\r\n                backgroundColor: 'rgba(22, 199, 154, 1)',\r\n                borderColor: 'rgba(22, 199, 154, 1)',\r\n            },\r\n            {\r\n                type:'line',\r\n                fill: true,\r\n                label: 'Total Cases',\r\n                data: dataPUI,\r\n                yAxisID: 'r',\r\n                backgroundColor: 'rgba(255, 123, 84, 1)',\r\n                borderColor: 'rgba(255, 123, 84, 1)',\r\n            },\r\n          ]\r\n        })\r\n        setDaily(false)\r\n    }, [])\r\n\r\n\r\n    \r\n    var options = {\r\n        onClick: (event, elements) => {\r\n            if(elements.length>0){\r\n                const chart = elements[0]._chart;\r\n                const element = chart.getElementAtEvent(event)[0];\r\n                const xLabel = chart.data.labels[element._index];\r\n                const dataset = chart.data.datasets[element._datasetIndex];\r\n        \r\n                const month = labelMonth.indexOf(xLabel)\r\n        \r\n                setDailyView(dataset.label, month)\r\n    \r\n                setChartTitle(`${dataset.label} for ${xLabel}`)\r\n            \r\n\r\n            }\r\n        },\r\n        title: {\r\n            display: true,\r\n            text: 'Person Under Investigations (PUI)',\r\n            fontColor: 'white',\r\n            fontSize: 17\r\n        },\r\n        legend: {\r\n            labels: {\r\n                fontColor: 'white'\r\n            },\r\n            position: 'bottom'\r\n        },\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    type: 'linear',\r\n                    id: 'r',\r\n                    position: 'right',\r\n                    ticks: {\r\n                        beginAtZero:true,\r\n                        fontColor: 'white'\r\n                    },\r\n                },\r\n                {\r\n                    type: 'linear',\r\n                    id: 'l',\r\n                    position: 'left',\r\n                    ticks: {\r\n                        beginAtZero:true,\r\n                        fontColor: 'white'\r\n                    },\r\n                },\r\n            ],\r\n            xAxes: [{\r\n                ticks: {\r\n                    beginAtZero: true,\r\n                    fontColor: 'white'\r\n                },\r\n            }]\r\n        } \r\n    }\r\n\r\n    var dailyOpt = {\r\n        title: {\r\n            display: true,\r\n            text: chartTitle,\r\n            fontColor: 'white',\r\n            fontSize: 17\r\n        },\r\n        legend: {\r\n            labels: {\r\n                fontColor: 'white'\r\n            },\r\n            position: 'bottom'\r\n        },\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    type: 'linear',\r\n                    id: 'l',\r\n                    position: 'left',\r\n                    ticks: {\r\n                        beginAtZero:true,\r\n                        fontColor: 'white'\r\n                    },\r\n                },\r\n            ],\r\n            xAxes: [{\r\n                ticks: {\r\n                    beginAtZero: true,\r\n                    fontColor: 'white'\r\n                },\r\n            }]\r\n        } \r\n    }\r\n\r\n    function return_monthly(){\r\n        var dataPUI = [], dataNPUI = [], dataPUIB = []\r\n        overall.forEach(value=>{\r\n            var month = parseInt(value.Tarikh.split('/')[1]-6)\r\n            dataPUI[month] = value.jumlahKesPUI\r\n            dataNPUI[month] = value.kesPUINegatif\r\n            dataPUIB[month] = value.kesPUIBaru\r\n        })\r\n        \r\n        setMonthlyChart({\r\n          labels: labelMonth,\r\n          datasets: [\r\n            {\r\n                type:'line',\r\n                fill: true,\r\n                yAxisID: 'l',\r\n                label: 'Confirmed Cases',\r\n                data: dataPUIB,\r\n                backgroundColor: 'rgba(187, 34, 5, 1)',\r\n                borderColor: 'rgba(187, 34, 5, 1)',\r\n            },\r\n            {\r\n                type:'line',\r\n                fill: true,\r\n                yAxisID: 'r',\r\n                label: 'Negatives',\r\n                data: dataNPUI,\r\n                backgroundColor: 'rgba(50, 224, 196, 1)',\r\n                borderColor: 'rgba(50, 224, 196, 1)',\r\n            },\r\n            {\r\n                type:'line',\r\n                fill: true,\r\n                label: 'Total Cases',\r\n                data: dataPUI,\r\n                yAxisID: 'r',\r\n                backgroundColor: 'rgba(255, 123, 84, 1)',\r\n                borderColor: 'rgba(255, 123, 84, 1)',\r\n            },\r\n          ]\r\n        })\r\n        setDaily(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className = 'default-chart-container'  style={{display: !isDaily ? 'block': 'none'}}>\r\n                {monthlyChart && <Line height={200} data={monthlyChart} options={options} />}\r\n            </div>\r\n            <div className = 'default-chart-container'  style={{display: isDaily ? 'block': 'none'}}>\r\n                {dailyChart && <Line height={200} data={dailyChart} options={dailyOpt} />}\r\n                <div className='monthly' onClick={()=>return_monthly()} style={{color:'white'}}>\r\n                Monthly\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Doughnut } from 'react-chartjs-2'\r\n\r\nexport default function ShowDeath({hospital}) {\r\n\r\n    //matiKCH,matiSIBU,matiBNTL,matiMIRI,matiSGB\r\n    const [ donutData, setDonutData ] = useState()\r\n\r\n    useEffect(()=>{\r\n        var data = []\r\n        hospital.forEach(value=>{\r\n            data[0] = value.matiKCH\r\n            data[1] = value.matiBNTL\r\n            data[2] = value.matiMIRI\r\n            data[3] = value.matiSGB\r\n        })\r\n\r\n        setDonutData({\r\n            maintainAspectRatio: true,\r\n            responsive: true,\r\n            labels: [\"Kuching\", \"Bintulu\", \"Miri\", \"Sg. Buloh\"],\r\n            datasets: [\r\n              {\r\n                data: data,\r\n                backgroundColor: ['#f0a500', '#006a71', '#e97171', '#5d54a4'],\r\n                hoverBackgroundColor: ['#f0a500', '#006a71', '#e97171', '#5d54a4']\r\n              }\r\n            ]\r\n          })\r\n    })\r\n\r\n    const options = {\r\n        legend: {\r\n          display: true,\r\n          position: \"right\"\r\n        },\r\n        elements: {\r\n          arc: {\r\n            borderWidth: 0\r\n          }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{width:'500px', height: '500px', display:'flex', alignItems:'center'}}>\r\n            <Doughnut height={500} width={500} data={{...donutData, }} options={{...options}} />\r\n        </div>\r\n    )\r\n}\r\n","\nimport './App.css';\nimport overall_data from './data/overall-statistics.csv';\nimport hospital_data from './data/hospital-data.csv'; \nimport { csv } from \"d3\";\nimport { useEffect, useState } from 'react';\nimport { Bar, Line } from 'react-chartjs-2';\nimport PositiveCases from './PositiveCases';\nimport ThirdChart from './ThirdChart';\nimport Recovered from './Recovered';\nimport PUI from './PUI';\nimport ShowDeath from './ShowDeath';\n\nfunction App() {\n\n  const [ loadingData, setLoadingData ] = useState(true)\n  const [ overall, setOverall ] = useState()\n  const [ hospital, setHospital ] = useState()\n  const [ isDefault, setDefault ] = useState()\n  const [ buttonVal, setButtonVal ] = useState()\n  const [ showTC, setShowTC ] = useState()\n  const [ showAC, setShowAC ] = useState()\n  const [ showPending, setShowPending ] = useState()\n  const [ showDeath, setShowDeath ] = useState()\n\n  const labelMonth = [\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December'\n  ]\n\n  function label_daily(month){\n    var days = 0\n    var arrDay = []\n    switch (month) {\n      case 0: days=30; break;\n      case 1: days=31; break;\n      case 2: days=31; break;\n      case 3: days=30; break;\n      case 4: days=31; break;\n      case 5: days=30; break;\n      case 6: days=31; break;\n    }\n\n    for(var i = 1; i < days+1; i ++){\n      arrDay.push(i)\n    }\n    return arrDay\n  }\n\n  //get data for all month (jumlah kes positif x jumlah recovered)\n  useEffect(()=>{\n    if(loadingData)\n    Promise.all([csv(overall_data), csv(hospital_data)]).then(results=>{\n      var data  = { tc: 0, it: 0, npui: 0, ppui: 0,  jkm: 0}\n      var oFinal = results[0][results[0].length-1]\n      var hFinal = results[1][results[1].length-1]\n      data.tc = oFinal.jumlahKesPositif\n      data.it = hFinal.dirawatJumlah\n      data.npui = oFinal.kesPUINegatif\n      data.ppui = oFinal.kesPUIPending\n      data.jkm = oFinal.jumlahKesMati\n      setButtonVal(data)\n      setOverall(results[0])\n      setHospital(results[1])\n      setDefault(true)\n      setLoadingData(false)\n\n    })\n  }, [])\n\n  function button_view(button){\n    setDefault(false)\n    switch (button) {\n      case 'tc':\n        setShowDeath(false)\n      break;\n      case 'ac':\n        setShowDeath(false)\n      break;\n      case 'jkm':\n        setShowDeath(true)\n      break;\n      case 'ppui':\n        setShowDeath(false)\n      break;\n    }\n  }\n\n  return (\n    <div className=\"container lilita\">\n\n      <div className='brand-name' onClick={()=>setDefault(true)}>\n          Sarawak COVID-19 Data Visualization Dashboard\n          <div className=\"brand-date\">\n            (June 2020 - December 2020)\n          </div>\n      </div>\n\n      <div className='top-nav'>\n        <div className='button' onClick={()=>button_view('tc')}>\n            <div className='value' style={{backgroundColor:'#ffd369'}}>\n              {buttonVal && buttonVal.tc}\n            </div>\n            Total Cases\n        </div>\n        <div className='button' onClick={()=>button_view('ac')}>\n            <div className='value' style={{backgroundColor:'#ff884b'}}>\n              {buttonVal && buttonVal.it}\n            </div>\n            Active Cases\n        </div>\n        {/* <div className='button'>\n            <div className='value' style={{backgroundColor: '#16c79a'}}>\n              {buttonVal && buttonVal.npui}\n            </div>\n            Negatives\n        </div> */}\n        <div className='button' onClick={()=>button_view('jkm')}>\n            <div className='value' style={{backgroundColor: '#f05454'}}>\n              {buttonVal && buttonVal.jkm}\n            </div>\n            Total Death\n        </div>\n        <div className='button' onClick={()=>button_view('ppui')}>\n            <div className='value' style={{backgroundColor: '#a6a9b6'}}>\n              {buttonVal && buttonVal.ppui}\n            </div>\n            Pending\n        </div>\n      </div>\n\n      <div className='vars' style={{display: !isDefault ? 'flex' : 'none'}}>\n          {showDeath ? <ShowDeath hospital={hospital} /> : 'loading data'}\n      </div>\n      <div className='default' style={{display: isDefault ? 'flex' : 'none', flexDirection:'column'}}>\n        <div className='row-1' style={{display: 'flex', flexDirection: 'row'}}>\n            <div className='default-chart new-cases'>\n              { overall && <PositiveCases overall={overall} labelMonth={labelMonth} label_daily={label_daily} />}\n            </div>\n            <div className='default-chart pui'>\n              { overall && <PUI overall={overall} labelMonth={labelMonth} label_daily={label_daily} />}\n            </div>\n            {/* <div className='default-chart recovered'>\n              { overall && <Recovered overall={overall} labelMonth={labelMonth} label_daily={label_daily} />}\n            </div> */}\n        </div>\n        <div className='row-2' style={{display: 'flex', flexDirection: 'row', alignItems:'center', justifyContent:'center'}}>\n            {/* <div className='default-chart death'>\n              { overall && <ThirdChart overall={overall} labelMonth={labelMonth} label_daily={label_daily} />}\n            </div> */}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}