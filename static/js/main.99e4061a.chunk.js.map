{"version":3,"sources":["data/overall-statistics.csv","data/hospital-data.csv","App.js","index.js"],"names":["App","useState","chart","setChart","topNavData","setNavData","loading","setLoading","loadingData","setLoadingData","overall","setOverall","hospital","setHospital","labelX","useEffect","data","jkp","jtsd","jk","jpui","jsd","jumlahKesPositif","jumlahRecovered","Promise","all","csv","overall_data","hospital_data","then","results","final","length","jumlahTelahSembuhDiscaj","jumlahKesMati","jumlahKesPUI","forEach","value","month","parseInt","Tarikh","split","labels","datasets","type","fill","label","backgroundColor","borderColor","pointRadius","pointHoverRadius","options","onClick","event","elements","_chart","element","getElementAtEvent","xLabel","_index","_datasetIndex","dataset","console","log","tooltips","callbacks","title","legend","fontColor","display","text","scales","yAxes","ticks","beginAtZero","xAxes","button_clicked","att","document","getElementsByClassName","switch_jkp","jtsd_view","dirawat","dirawatJumlah","jsd_view","kesKematian","matiJumlah","jk_view","kesPUI","jpui_view","default_view","className","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.99e4061a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/overall-statistics.f979d527.csv\";","export default __webpack_public_path__ + \"static/media/hospital-data.cfebbe68.csv\";","\nimport './App.css';\nimport overall_data from './data/overall-statistics.csv';\nimport hospital_data from './data/hospital-data.csv'; \nimport { csv } from \"d3\";\nimport { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nfunction App() {\n\n  const [chart, setChart] = useState()\n  const [ topNavData, setNavData ] = useState()\n  const [ loading, setLoading ] = useState(true)\n  const [ loadingData, setLoadingData ] = useState(true)\n  const [ overall, setOverall ] = useState()\n  const [ hospital, setHospital ] = useState()\n\n  const labelX = [\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December'\n  ]\n\n  //get data for all month (jumlah kes positif x jumlah recovered)\n  useEffect(()=>{\n    var data = {\n      jkp : 0, jtsd : 0, jk : 0, jpui : 0, jsd : 0\n    }\n\n    var jumlahKesPositif = [], jumlahRecovered = []\n    if(loadingData)\n    Promise.all([csv(overall_data), csv(hospital_data)]).then(results=>{\n      var overall = results[0]\n      var hospital = results[1]\n      var final = overall[overall.length-1]\n      data.jkp = final.jumlahKesPositif\n      data.jtsd = final.jumlahTelahSembuhDiscaj\n      data.jk = final.jumlahKesMati\n      data.jpui = final.jumlahKesPUI\n      data.jsd = 0\n\n      overall.forEach(value=>{\n        var month = parseInt(value.Tarikh.split('/')[1])-6\n        jumlahKesPositif[month] = value.jumlahKesPositif\n        jumlahRecovered[month] = value.jumlahTelahSembuhDiscaj\n      })\n      \n      setNavData(data)\n      setOverall(overall)\n      setHospital(hospital)\n      setLoading(false)\n      setLoadingData(false)\n      setChart({\n        labels: labelX,\n        datasets: [\n          {\n            type:'line',\n            fill: false,\n            label: 'Total Positive Cases',\n            data: jumlahKesPositif,\n            backgroundColor: 'rgba(240, 84, 84, 1)',\n            borderColor: 'rgba(240, 84, 84, 1)',\n            pointRadius: 5,\n            pointHoverRadius: 7,\n          },\n          {\n            type:'bar',\n            label: 'Total Recovered and Discharge',\n            data: jumlahRecovered,\n            backgroundColor: 'rgba(22, 199, 154, 1)',\n          },\n        ]\n      })\n    })\n\n  }, [])\n\n  var options = {\n    onClick: (event, elements) => {\n      const chart = elements[0]._chart;\n      const element = chart.getElementAtEvent(event)[0];\n      const xLabel = chart.data.labels[element._index];\n\n      if(element._datasetIndex == 0){\n        //positive cases\n      }\n      \n      if(element._datasetIndex == 1){\n        //recovered\n      }\n\n      const dataset = chart.data.datasets[element._datasetIndex];\n      const value = dataset.data[element._index];\n      console.log(dataset.label + \" at \" + xLabel + \": \" + value);\n    },\n    tooltips: {\n       callbacks: {\n          title: function() {}\n       }\n    },\n    legend: {\n         labels: {\n              fontColor: 'white'\n             }\n          },\n    title: {\n        display: true,\n        fontColor: 'white',\n        text: 'Custom Chart Title'\n    }     ,\n    scales: {\n        yAxes: [{\n            ticks: {\n                beginAtZero:true,\n                fontColor: 'white'\n            },\n        }],\n      xAxes: [{\n            ticks: {\n                beginAtZero: true,\n                fontColor: 'white'\n            },\n        }]\n    } \n  }\n\n  function switch_jkp(){\n    var jumlahKesPositif = []\n    overall.forEach(value=>{\n      var month = parseInt(value.Tarikh.split('/')[1])-6\n      jumlahKesPositif[month] = value.jumlahKesPositif\n    })\n    \n    setChart({\n      labels: labelX,\n      datasets: [\n        {\n          type:'bar',\n          fill: false,\n          label: 'Total Positive Cases',\n          data: jumlahKesPositif,\n          backgroundColor: 'rgba(240, 84, 84, 1)',\n          pointRadius: 5,\n          pointHoverRadius: 7,\n        },\n      ]\n    })\n  }\n\n  function jtsd_view(){\n    var jumlahRecovered = []\n    overall.forEach(value=>{\n      var month = parseInt(value.Tarikh.split('/')[1])-6\n      jumlahRecovered[month] = value.jumlahTelahSembuhDiscaj\n    })\n    \n    setChart({\n      labels: labelX,\n      datasets: [\n        {\n          type:'bar',\n          label: 'Total Recovered and Discharge',\n          data: jumlahRecovered,\n          backgroundColor: 'rgba(22, 199, 154, 1)',\n        },\n      ]\n    })\n  }\n\n  function jsd_view(){\n    var dirawat = []\n    hospital.forEach(value=>{\n      var month = parseInt(value.Tarikh.split('/')[1])-6\n      dirawat[month] = value.dirawatJumlah\n    })\n    \n    setChart({\n      labels: labelX,\n      datasets: [\n        {\n          type:'bar',\n          label: 'Total In Treatment',\n          data: dirawat,\n          backgroundColor: 'rgba(255, 211, 105, 1)',\n        },\n      ]\n    })\n  }\n\n  function jk_view(){\n    var kesKematian = []\n    hospital.forEach(value=>{\n      var month = parseInt(value.Tarikh.split('/')[1])-6\n      kesKematian[month] = value.matiJumlah\n    })\n    \n    setChart({\n      labels: labelX,\n      datasets: [\n        {\n          type:'bar',\n          label: 'Total Death',\n          data: kesKematian,\n          backgroundColor: 'rgba(240, 84, 84, 1)',\n        },\n      ]\n    })\n  }\n\n  function jpui_view(){\n    console.log(overall);\n    var kesPUI = []\n    overall.forEach(value=>{\n      var month = parseInt(value.Tarikh.split('/')[1])-6\n      kesPUI[month] = value.jumlahKesPUI\n    })\n    \n    setChart({\n      labels: labelX,\n      datasets: [\n        {\n          type:'bar',\n          label: 'Total PUI Cases',\n          data: kesPUI,\n          backgroundColor: 'rgba(240, 84, 84, 1)',\n        },\n      ]\n    })\n  }\n\n  function default_view(){\n    var jumlahKesPositif = [], jumlahRecovered = []\n    overall.forEach(value=>{\n      var month = parseInt(value.Tarikh.split('/')[1])-6\n      jumlahKesPositif[month] = value.jumlahKesPositif\n      jumlahRecovered[month] = value.jumlahTelahSembuhDiscaj\n    })\n    \n    setChart({\n      labels: labelX,\n      datasets: [\n        {\n          type:'line',\n          fill: false,\n          label: 'Total Positive Cases',\n          data: jumlahKesPositif,\n          backgroundColor: 'rgba(240, 84, 84, 1)',\n          borderColor: 'rgba(240, 84, 84, 1)',\n          pointRadius: 5,\n          pointHoverRadius: 7,\n        },\n        {\n          type:'bar',\n          label: 'Total Recovered and Discharge',\n          data: jumlahRecovered,\n          backgroundColor: 'rgba(22, 199, 154, 1)',\n        },\n      ]\n    })\n  }\n\n  function button_clicked(att){\n    var dropdown = document.getElementsByClassName('')\n    switch(att){\n      case 'jkp':\n        switch_jkp()\n      break;\n      case 'jtsd':\n        jtsd_view()\n      break;\n      case 'jsd':\n        jsd_view()\n      break;\n      case 'jk':\n        jk_view()\n      break;\n      case 'jpui':\n        jpui_view()\n      break;\n      default:\n        default_view();\n      break;\n    }\n  }\n\n  return (\n    <div className=\"container\">\n\n      <div className='brand-name cuprum' onClick={()=>button_clicked()}>\n          Chartjs Data Visualizations Group B\n          <div className=\"brand-date\">\n            (June 2020 - December 2020)\n          </div>\n      </div>\n\n      <div className='top-nav'>\n          <div className=\"button\" onClick={()=>button_clicked('jkp')}>\n            <div className='jkp value'>\n              {!loading && topNavData.jkp}\n            </div>\n            Positive Cases\n          </div>\n          <div className=\"button\" onClick={()=>button_clicked('jtsd')}>\n            <div className='jtsd value'>\n              {!loading && topNavData.jtsd}\n            </div>\n            Recovered and Discharged\n          </div>\n          <div className=\"button\" onClick={()=>button_clicked('jsd')}>\n            <div className='jsd value'>\n              {!loading && topNavData.jsd}\n            </div>\n            In Treatment\n          </div>\n          <div className=\"button\" onClick={()=>button_clicked('jk')}>\n            <div className='jk value'>\n              {!loading && topNavData.jk}\n            </div>\n            Death\n          </div>\n          <div className=\"button\" onClick={()=>button_clicked('jpui')}>\n            <div className='jpui value'>\n              {!loading && topNavData.jpui}\n            </div>\n            PUI Cases\n          </div>\n      </div>\n      \n      <div className='bar'>\n        {chart ? <Line data={chart} options={{...options, title: ''}} /> : 'loading data ....'}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}